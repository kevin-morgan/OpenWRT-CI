# =================================================
# https://github.com/kevin-morgan/OpenWRT-CI
# Description: OpenWRT Con­tin­u­ous In­te­gra­tion with GitHub Actions
# Lisence: MIT
# Author: Kevin MORGAN
# Email: kevin_morgan@outlook.com
# =================================================

name: Build OpenWRT


on:
  watch:
    types: [started]
#  push:
#    branches:
#      - master
#    tags:
#      - 'v*'
#    paths:
#      - '.config'
#  schedule:
#    - cron: 0 20 * * *
#  release:
#    types: [published]


env:
  REPO_URL: https://github.com/coolsnowwolf/lede
#  REPO_URL: https://github.com/kevin-morgan/lede
  REPO_BRANCH: master
#  REPO_URL: https://github.com/openwrt/openwrt
#  REPO_BRANCH: openwrt-19.07
  REPO_THEME_URL: https://github.com/kevin-morgan/luci-theme-argon-dark
  REPO_THEME_BRANCH: master
  REPO_SERVERCHAN_URL: https://github.com/tty228/luci-app-serverchan
  REPO_SERVERCHAN_BRANCH: master
  CONFIG_FILE: x86_64.config
  CUSTOM_SH: custom.sh
  SSH_ACTIONS: true
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: false
  VERSION_NUMBER: 19.07
  BUILD_DATE: 2020.02.28
  REVESION_NUMBER: 001


jobs:

  build:

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        echo "======================="
        echo "Space Usage:"
        echo "======================="
        df -h
        echo "======================="

    - name: Clone Source Code
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Clone luci-theme-argon-dark
      run: |
        git clone --depth 1 $REPO_THEME_URL -b $REPO_THEME_BRANCH openwrt/package/kevin/luci-theme-argon-dark
        git clone --depth 1 $REPO_SERVERCHAN_URL -b $REPO_SERVERCHAN_BRANCH openwrt/package/kevin/luci-app-serverchan

    - name: Add lienol's package to Feeds
      run: cd openwrt && echo "src-git lienol https://github.com/Lienol/openwrt-package" >> feeds.conf.default

    - name: Update Feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: lienol's fix
      run: |
        rm -rf feeds/lienol/lienol/ipt2socks
        rm -rf feeds/lienol/lienol/shadowsocksr-libev
        rm -rf feeds/lienol/lienol/pdnsd-alt
        rm -rf feeds/lienol/package/verysync
        rm -rf feeds/lienol/lienol/luci-app-verysync
        rm -rf package/lean/kcptun
        rm -rf package/lean/trojan
        rm -rf package/lean/v2ray
        rm -rf package/lean/luci-app-kodexplorer
        rm -rf package/lean/luci-app-pppoe-relay
        rm -rf package/lean/luci-app-pptp-server
        rm -rf package/lean/luci-app-v2ray-server

    - name: Install Feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load Custom Configuration
      run: |
        [ -e files ] && mv files openwrt/files
#        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $CUSTOM_SH
        cd openwrt
        ../$CUSTOM_SH

    - name: SSH connection to Actions
      uses: kevin-morgan/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: Download Packages
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        echo "======================="
        echo "Space Usage:"
        echo "======================="
        df -h
        echo "======================="
        echo $PWD "exclude ./build_dir & ./bin"
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        echo "======================="
        echo $PWD"/build_dir"
        du -h --max-depth=1 ./build_dir

    - name: Compile The Firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"
        echo "======================="
        echo "Space Usage:"
        echo "======================="
        df -h
        echo "======================="
        echo $PWD "exclude ./build_dir & ./bin"
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        echo "======================="
        echo $PWD"/build_dir"
        du -h --max-depth=1 ./build_dir
        echo "======================="
        echo $PWD"/bin"
        du -h --max-depth=1 ./bin

    - name: Upload bin Directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWRT-Directory
        path: openwrt/bin

    - name: Organize Files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$(pwd)"
        echo "::set-output name=status::success"

    - name: Upload Firmware Directory
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWRT-Firmware
        path: ${{ env.FIRMWARE }}


